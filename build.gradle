buildscript {
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:3.1.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.palantir.docker' version '0.35.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group = 'com.gopang'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories { mavenCentral() }

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    //== Spring Web & JPA & AOP & Actuator ==//
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //== Spring Cloud ==//
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.3'

    //== 차후에 추가 ==//
//    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
//    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
//    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//    implementation 'io.github.resilience4j:resilience4j-spring-boot3'
//    implementation 'io.github.resilience4j:resilience4j-circuitbreaker'
//    implementation 'io.github.resilience4j:resilience4j-timelimiter'

    // DB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2:2.1.214'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

docker {
    name("gopang/${project.name}:${version}")
    dockerfile file('Dockerfile')
    files bootJar
    buildArgs(['JAR_FILE': bootJar.archiveFileName.get()])
}

tasks.named('test') {
    useJUnitPlatform()
}
